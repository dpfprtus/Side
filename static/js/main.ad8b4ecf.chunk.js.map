{"version":3,"sources":["fbase.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/AuthForm.js","routes/Auth.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["authService","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","dbService","getFirestore","storageService","getStorage","Nweet","nweetObj","isOwner","useState","editing","setEditing","text","onDeleteClick","e","a","window","confirm","deleteDoc","doc","id","attachmentURL","deleteObject","ref","toggleEditting","prev","onClick","src","width","height","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","fileInput","useRef","onSubmit","preventDefault","attachmentRef","uid","uuidv4","uploadString","getDownloadURL","createdAt","Date","now","creatorId","addDoc","collection","onChange","value","target","type","placeholder","maxLength","accept","theFile","files","reader","FileReader","onloadend","result","currentTarget","readAsDataURL","alt","current","Home","nweets","setNweets","useEffect","onSnapshot","nweetArray","docs","map","data","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","auth","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","name","required","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Profile","refreshUser","history","useNavigate","displayName","newDisplayName","setNewDisplayName","getMyNweets","q","query","where","orderBy","getDocs","forEach","console","log","updateProfile","currentUser","signOut","Navigation","to","AppRouter","isLoggedIn","path","element","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","args","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad8b4ecf.chunk.js","sourcesContent":["import {initializeApp} from \"firebase/app\"\nimport {getAuth} from \"firebase/auth\";\nimport * as firebase from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getStorage} from \"firebase/storage\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyC1HAc6kkNUaNyhkbaaV8xGnQlaYi1MYRE\",\n    authDomain: \"rwitter-1c95a.firebaseapp.com\",\n    projectId: \"rwitter-1c95a\",\n    storageBucket: \"rwitter-1c95a.appspot.com\",\n    messagingSenderId: \"34985897094\",\n    appId: \"1:34985897094:web:d8dbdda0fcbcfddd483507\",\n  };\n\n  const app = initializeApp(firebaseConfig);\n  \n  export const firebaseInstance = firebase;\n  export const authService = getAuth();\n  export const dbService = getFirestore();\n  export const storageService = getStorage();","import React,{useState} from 'react';\nimport {doc,deleteDoc,updateDoc} from 'firebase/firestore';\nimport { dbService,storageService } from 'fbase';\nimport {ref,deleteObject} from 'firebase/storage'\n\nconst Nweet = ({nweetObj,isOwner})=>{\n    const [editing,setEditing] = useState(false);\n    const [newNweet,setNewNweet] = useState(nweetObj.text);\n\n    const onDeleteClick = async (e)=>{\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\n        if(ok){\n            await deleteDoc(doc(dbService,`/nweets/${nweetObj.id}`))\n            if(nweetObj.attachmentURL !== \"\"){\n            await deleteObject(ref(storageService,nweetObj.attachmentURL))\n        }}\n    }\n    const onSubmit= async (e)=>{\n        e.preventDefault();\n        await updateDoc(doc(dbService,`/nweets/${nweetObj.id}`),{\n            text:newNweet,\n        })\n        setEditing(false);\n    }\n    const onChange = (e) =>{\n        const {target:{value}} = e;\n        setNewNweet(value);\n    }\n    const toggleEditting = () => setEditing(prev=>!prev);\n   return (\n       <div>\n       {editing ? (\n           <>\n           \n           <button onClick={toggleEditting}>Cancel</button>\n           </>\n       )\n    \n    :(<>\n        <div>\n        <h4>{nweetObj.text}</h4>\n        {nweetObj.attachmentURL && <img src={nweetObj.attachmentURL} width=\"50px\" height=\"50px\"/>}\n        {isOwner &&(\n        <>\n        <button onClick={onDeleteClick}>Delete Nweet</button>\n        <button onClick={toggleEditting}>Edit Nweet</button>\n        </>\n        \n        )}\n    </div>\n    </>\n    )\n    }\n    </div>\n   )\n       \n};\n\nexport default Nweet;","import React,{useState,useRef} from 'react';\nimport { storageService,dbService } from 'fbase';\nimport { v4 as uuidv4 } from 'uuid';\nimport { addDoc,collection } from 'firebase/firestore';\nimport { ref,uploadString,getDownloadURL } from \"firebase/storage\";\n\n\n\nconst NweetFactory = ({userObj})=>{\n    const [nweet,setNweet] = useState(\"\");\n    const [attachment,setAttachment] = useState(\"\");\n    const fileInput = useRef();\n    const onSubmit = async (e)=>{\n    e.preventDefault();\n    let attachmentURL=\"\";\n    if (attachment !== \"\"){\n        const attachmentRef = ref(storageService,`${userObj.uid}/${uuidv4()}`);\n        const response = await uploadString(attachmentRef,attachment,\"data_url\")\n        attachmentURL = await getDownloadURL(attachmentRef);\n    }\n    const nweetObj = {\n        text:nweet,\n        createdAt: Date.now(),\n        creatorId: userObj.uid,\n        attachmentURL,\n    }\n     await addDoc(collection(dbService,\"nweets\"),nweetObj);\n     setNweet(\"\");\n     setAttachment(\"\");\n}\n\nconst onChange = (e) => {\n    const {target:{value}} = e;\n    setNweet(value);\n}\nconst onFileChange = (e)=>{\n    \n    const {target:{files}} = e;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (e)=>{\n        const {currentTarget:{result}} = e;\n        setAttachment(result)\n    }\n    reader.readAsDataURL(theFile);\n\n}\nconst onClearAttachment = ()=> {\n    setAttachment(\"\")\n    fileInput.current.value=null;\n}\n    return (\n        <form onSubmit={onSubmit}>\n            <input onChange={onChange} type=\"text\" placeholder=\"What's on yout mind?\" maxLength={120} value={nweet}/>\n            \n            <input type=\"file\" accept=\"image/*\" onChange={onFileChange}/>\n            <input type=\"submit\" value=\"Nweet\"/>\n            {attachment &&\n            <div> \n            <img alt=\"err\" src={attachment} width=\"50px\" height=\"50px\" ref={fileInput}/>\n            <button onClick={onClearAttachment}>Clear</button>\n            </div>}\n        </form>\n    )\n}\n\nexport default NweetFactory;","import React,{useState,useEffect} from 'react';\nimport { dbService } from 'fbase';\nimport { collection,onSnapshot } from 'firebase/firestore';\nimport Nweet from 'components/Nweet';\nimport NweetFactory from 'components/NweetFactory';\n\nconst Home =({userObj})=>{\n    \n    const [nweets,setNweets] = useState([]);\n\n    useEffect(() => {\n        onSnapshot(collection(dbService,\"nweets\"),(a)=>{\n            const nweetArray = a.docs.map((doc)=>({id:doc.id,...doc.data()}))\n            setNweets(nweetArray)\n    })\n    }, [])\n    \n    return <div>\n        <NweetFactory userObj={userObj}/>\n        <div>\n            {nweets.map((nweet)=>(\n                <Nweet nweetObj={nweet} key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid}/>\n            ))\n            }\n        </div>\n    </div>\n}\nexport default Home;","import React,{useState} from 'react';\nimport { getAuth,createUserWithEmailAndPassword,signInWithEmailAndPassword } from 'firebase/auth';\n\nconst AuthForm = ()=>{\n    const [email,setEmail] = useState(\"\");\n    const [password,setPassword] = useState(\"\");\n    const [newAccount,setNewAccount] = useState(true);\n    const [error,setError] = useState(\"\");\n    const toggleAccount = () => setNewAccount(prev => !prev);\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        const auth = getAuth();\n        try{\n            let data;\n            if(true){\n                data = await createUserWithEmailAndPassword(auth,email, password)\n            }else{\n                data = await signInWithEmailAndPassword(auth, email, password)\n            }\n        }\n        catch(error){\n            setError(error.message);\n        }\n    }\n    const onChange = (e)=> {\n        const {target:{name,value}} = e;\n        if(name === \"email\"){\n            setEmail(value);\n        }else if(name ===\"password\"){\n            setPassword(value);\n        }\n    }\n    \n    return (\n        <>\n        <form onSubmit={onSubmit}>\n            <input name=\"email\" type=\"text\" placeholder=\"Email\" required value={email} onChange={onChange}/>\n            <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange}/>\n            <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"}/>\n        </form>\n        {error}\n        <span onClick={toggleAccount}>{newAccount ? \"Sign In\" : \"Log In\"}</span>\n    </>\n    )\n}\n\nexport default AuthForm","import React,{useState} from 'react';\nimport App from '../components/App';\nimport firebase, { authService, firebaseInstance } from '../fbase';\nimport {signInWithPopup,getAuth,signInWithEmailAndPassword,createUserWithEmailAndPassword,GoogleAuthProvider,GithubAuthProvider} from \"firebase/auth\"\nimport AuthForm from 'components/AuthForm';\n\nconst Auth = ()=> {\n \n\n    \n \n    \n    const onSocialClick = async (e)=>{\n        const {target:{name}} = e;\n        let provider;\n        if(name === \"google\"){\n            provider = new GoogleAuthProvider();\n            \n        }else if(name ===\"github\"){\n            provider = new GithubAuthProvider();\n        }\n        await signInWithPopup(authService,provider);\n    };\n    return (\n    <div>\n        <AuthForm/>\n        <div>\n            \n            <button onClick={onSocialClick} name=\"google\">Continue with Google</button>\n            <button onClick={onSocialClick} name=\"github\">Continue with Github</button>\n        </div>\n    <script src=\"https://www.gstatic.com/firebasejs/4.10.1/firebase.js\"></script>\n\n    </div>\n    )\n}\n\nexport default Auth;","import React,{useEffect,useState} from 'react';\nimport {getAuth,updateProfile} from 'firebase/auth'\nimport {useNavigate} from 'react-router-dom';\nimport { dbService } from 'fbase';\nimport { where,collection,query,getDocs, orderBy } from '@firebase/firestore';\n\nconst Profile =({userObj,refreshUser})=>{\n    const history = useNavigate();\n    const [newDisplayName,setNewDisplayName] = useState(userObj.displayName);\n    const onLogOutClick= () => {\n        getAuth().signOut();\n        history(\"/\");\n        refreshUser();\n    };\n    const getMyNweets= async ()=>{\n        const q = query(collection(dbService,\"nweets\"),where(\"creatorId\",\"==\",userObj.uid),orderBy(\"createdAt\",\"desc\"));\n        const nweets = await getDocs(q);\n        nweets.forEach(doc => console.log(doc.id,\"=>\",doc.data()))\n    }\n    useEffect(() => {\n        getMyNweets();\n    }, [])\n    const onSubmit = async (e)=>{\n       if(userObj.displayName !== newDisplayName){\n            await updateProfile(getAuth().currentUser,{\n                displayName: newDisplayName,\n            })\n        refreshUser();\n       }\n    };\n    const onChange = (e) => {\n        e.preventDefault();\n        const {target:{value}} = e\n        setNewDisplayName(value)\n    }\n    return <>\n    <form onSubmit={onSubmit}>\n        <input onChange={onChange} value={newDisplayName} type=\"text\" placeholder=\"Display name\"/>\n        <input type=\"submit\" value=\"Update Profile\"/>\n    </form>\n    <button onClick={onLogOutClick}>Log Out</button>\n    </>\n}\nexport default Profile\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nconst Navigation = ({userObj})=>{\n    return (\n    <nav>\n     <ul>\n         <li>\n             <Link to =\"/\">Home</Link>\n         </li>\n         <li>\n             <Link to=\"/profile\">{userObj.displayName}의 profile</Link>\n         </li>\n         </ul>   \n    </nav>\n    )\n}\nexport default Navigation;","import React from 'react';\nimport {HashRouter as Router,Route,Routes} from 'react-router-dom'\nimport Home from '../routes/Home.js';\nimport Auth from '../routes/Auth.js';\nimport Profile from '../routes/Profile.js';\nimport Navigation from './Navigation.js';\n\nconst AppRouter = ({isLoggedIn,userObj,refreshUser}) => {\n\n    return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj}/>}\n            <Routes>\n\n                {isLoggedIn ? (\n                    <>\n                <Route path=\"/\" element={<Home userObj={userObj}/>}/>\n                <Route path=\"/profile\" element={<Profile refreshUser={refreshUser} userObj={userObj}/>}/>\n                </>\n                )\n                :\n                <Route path=\"/\" element={<Auth/>}/>}\n        \n            </Routes>\n        </Router>\n    )\n}\n\nexport default AppRouter;","import AppRouter from \"./Router\";\nimport React, {useState,useEffect} from 'react';\nimport {authService} from \"fbase\"\n\nfunction App() {\n  const [init,setInit] = useState(false);\n  const [isLoggedIn,setIsLoggedIn] = useState(false);\n  const [userObj,setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user)=>{\n      if(user){\n        setIsLoggedIn(true);\n        setUserObj({\n          displayName:user.displayName,\n          uid:user.uid,\n          updateProfile: (args)=> user.updateProfile(args),\n        });\n        \n      }else{\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    })\n  }, [])\n  const refreshUser = ()=>{\n    const user = authService.currentUser;\n    setUserObj({\n      displayName:user.displayName,\n      uid:user.uid,\n      updateProfile: (args)=> user.updateProfile(args),\n    })\n  }\n  return (\n    <>\n    {init ? <AppRouter refreshUser={refreshUser} userObj={userObj} isLoggedIn={isLoggedIn}/> : \"Initializing...\"}\n    </>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}